package seaweedfs.core.document;

import java.io.Serializable;
import java.time.Duration;

public class ByteArrayDocument extends AbstractDocument<byte[]> implements Serializable {

    private static final long serialVersionUID = -1241437249821179432L;

    /**
     * Creates a {@link ByteArrayDocument} which the document id.
     *
     * @param id The unique filer ID of the {@link Document}, generated by filer server.
     * @return a {@link ByteArrayDocument}.
     */
    public static ByteArrayDocument create(String id) {
        return new ByteArrayDocument(id, Duration.ZERO, null);
    }

    public static ByteArrayDocument create(byte[] content) {
        return new ByteArrayDocument(null, Duration.ZERO, null);
    }

    /**
     * Creates a {@link ByteArrayDocument} which the document id and content.
     *
     * @param id      The unique filer ID of the {@link Document}, generated by filer server.
     * @param content the content of the document.
     * @return a {@link ByteArrayDocument}.
     */
    public static ByteArrayDocument create(String id, byte[] content) {
        return new ByteArrayDocument(id, Duration.ZERO, content);
    }

    /**
     * Private constructor which is called by the static factory methods eventually.
     *
     * @param id      the per-bucket unique document id.
     * @param content the content of the document.
     * @param expiry  the expiration time of the document.
     */
    private ByteArrayDocument(String id, Duration expiry, byte[] content) {
        super(id, expiry, content);
    }
}
