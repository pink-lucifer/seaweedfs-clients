package seaweedfs.core.document;

import java.io.Serializable;
import java.nio.ByteBuffer;
import java.time.Duration;

public class ByteBufferDocument extends AbstractDocument<ByteBuffer> implements Serializable {

    private static final long serialVersionUID = 5235501658409605187L;

    /**
     * Creates a {@link ByteBufferDocument} which the document id.
     *
     * @param id The unique filer ID of the {@link Document}, generated by filer server.
     * @return a {@link ByteBufferDocument}.
     */
    public static ByteBufferDocument create(String id) {
        return new ByteBufferDocument(id, Duration.ZERO, null);
    }

    public static ByteBufferDocument create(ByteBuffer content) {
        return new ByteBufferDocument(null, Duration.ZERO, null);
    }

    /**
     * Creates a {@link ByteBufferDocument} which the document id and content.
     *
     * @param id      The unique filer ID of the {@link Document}, generated by filer server.
     * @param content the content of the document.
     * @return a {@link ByteBufferDocument}.
     */
    public static ByteBufferDocument create(String id, ByteBuffer content) {
        return new ByteBufferDocument(id, Duration.ZERO, content);
    }

    /**
     * Private constructor which is called by the static factory methods eventually.
     *
     * @param id      the per-bucket unique document id.
     * @param content the content of the document.
     * @param expiry  the expiration time of the document.
     */
    private ByteBufferDocument(String id, Duration expiry, ByteBuffer content) {
        super(id, expiry, content);
    }
}
